version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: 3tier-db
    environment:
      POSTGRES_DB: appdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d appdb"]
      interval: 30s
      timeout: 10s
      retries: 3

  # FastAPI Backend
  # backend:
  #   build: ./backend
  #   container_name: 3tier-backend
  #   environment:
  #     DATABASE_URL: postgresql://user:password@db:5432/appdb
  #   ports:
  #     - "8000:8000"
  #   depends_on:
  #     db:
  #       condition: service_healthy
  #   networks:
  #     - app-network
  #   volumes:
  #     - ./backend:/app
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3

  # # React Frontend
  # frontend:
  #   build: ./frontend
  #   container_name: 3tier-frontend
  #   environment:
  #     REACT_APP_API_URL: http://localhost:8000
  #   ports:
  #     - "3000:80"
  #   depends_on:
  #     backend:
  #       condition: service_healthy
  #   networks:
  #     - app-network

  backend:
    build: ./backend
    container_name: 3tier-backend
    environment:
      DATABASE_URL: postgresql://user:password@db:5432/appdb
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    volumes:
      - ./backend:/app
  # optional: remove healthcheck while debugging
  # healthcheck:
  #   test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
  #   interval: 30s
  #   timeout: 10s
  #   retries: 3

  frontend:
    build: ./frontend
    container_name: 3tier-frontend
    environment:
      REACT_APP_API_URL: http://backend:8000
    ports:
      - "3000:80"
    depends_on:
      backend:
        condition: service_started
    networks:
      - app-network


volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge